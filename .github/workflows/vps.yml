name: OpenVPN Server

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn easy-rsa wget unzip

      - name: Setup EasyRSA PKI
        run: |
          make-cadir ~/openvpn-ca
          cd ~/openvpn-ca
          ./easyrsa init-pki
          ./easyrsa --batch build-ca nopass
          ./easyrsa gen-dh
          ./easyrsa --batch gen-req server nopass
          ./easyrsa --batch sign-req server server
          ./easyrsa --batch gen-req client1 nopass
          ./easyrsa --batch sign-req client client1

      - name: Configure OpenVPN Server
        run: |
          sudo mkdir -p /etc/openvpn
          sudo cp ~/openvpn-ca/pki/ca.crt /etc/openvpn/
          sudo cp ~/openvpn-ca/pki/private/server.key /etc/openvpn/
          sudo cp ~/openvpn-ca/pki/issued/server.crt /etc/openvpn/
          sudo cp ~/openvpn-ca/pki/dh.pem /etc/openvpn/
          cat <<EOF | sudo tee /etc/openvpn/server.conf
          port 1194
          proto tcp
          dev tun
          ca ca.crt
          cert server.crt
          key server.key
          dh dh.pem
          keepalive 10 120
          persist-key
          persist-tun
          status openvpn-status.log
          verb 3
          EOF

      - name: Start OpenVPN
        run: |
          sudo openvpn --config /etc/openvpn/server.conf --daemon
          sleep 5

      - name: Install ngrok
        run: |
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin

      - name: Authenticate ngrok
        run: |
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Start ngrok tunnel
        run: |
          nohup ngrok tcp 1194 > ngrok.log &
          sleep 10
          cat ngrok.log

      - name: Get ngrok public address
        run: |
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' > ngrok_url.txt
          cat ngrok_url.txt

      - name: Generate Client OVPN Profile
        run: |
          NGROK_ADDR=$(cat ngrok_url.txt | sed 's/tcp:\/\///')
          HOST=$(echo $NGROK_ADDR | cut -d: -f1)
          PORT=$(echo $NGROK_ADDR | cut -d: -f2)

          cat <<EOF > client.ovpn
          client
          dev tun
          proto tcp
          remote $HOST $PORT
          resolv-retry infinite
          nobind
          persist-key
          persist-tun
          remote-cert-tls server
          cipher AES-256-CBC
          verb 3
          <ca>
          $(cat ~/openvpn-ca/pki/ca.crt)
          </ca>
          <cert>
          $(cat ~/openvpn-ca/pki/issued/client1.crt)
          </cert>
          <key>
          $(cat ~/openvpn-ca/pki/private/client1.key)
          </key>
          EOF

      - name: Upload OVPN Config
        uses: actions/upload-artifact@v3
        with:
          name: client-ovpn
          path: client.ovpn
