name: OpenVPN-Tailscale

on:
  workflow_dispatch:
    # allows manual start

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Update & Install Packages
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install openvpn easy-rsa curl jq tailscale -y

      - name: Setup Easy-RSA
        run: |
          make-cadir ~/openvpn-ca
          cd ~/openvpn-ca
          ./easyrsa init-pki
          echo "Easy-RSA PKI initialized"

      - name: Create CA & Server Certificates
        run: |
          cd ~/openvpn-ca
          ./easyrsa build-ca nopass <<< $'\n'
          ./easyrsa gen-req server nopass <<< $'\n'
          ./easyrsa sign-req server server <<< "yes"
          ./easyrsa gen-dh
          openvpn --genkey --secret ta.key
          echo "Certificates created"

      - name: Configure OpenVPN Server
        run: |
          sudo cp ~/openvpn-ca/pki/ca.crt /etc/openvpn/
          sudo cp ~/openvpn-ca/pki/issued/server.crt /etc/openvpn/
          sudo cp ~/openvpn-ca/pki/private/server.key /etc/openvpn/
          sudo cp ~/openvpn-ca/ta.key /etc/openvpn/
          cat <<EOF | sudo tee /etc/openvpn/server.conf
          port 1194
          proto tcp
          dev tun
          ca ca.crt
          cert server.crt
          key server.key
          dh dh.pem
          tls-auth ta.key 0
          server 10.8.0.0 255.255.255.0
          keepalive 10 120
          persist-key
          persist-tun
          cipher AES-256-CBC
          user nobody
          group nogroup
          status openvpn-status.log
          verb 3
          EOF

      - name: Start OpenVPN Server
        run: sudo systemctl start openvpn@server || sudo openvpn --config /etc/openvpn/server.conf --daemon

      - name: Connect to Tailscale
        env:
          TS_AUTH_KEY: ${{ secrets.TS_AUTH_KEY }}
        run: |
          sudo tailscale up --authkey $TS_AUTH_KEY --hostname github-runner --accept-routes

      - name: Get Tailscale IP
        id: tailscale_ip
        run: |
          TS_IP=$(tailscale ip -4)
          echo "TS_IP=$TS_IP" >> $GITHUB_OUTPUT

      - name: Generate client.ovpn
        run: |
          TS_IP=${{ steps.tailscale_ip.outputs.TS_IP }}
          cat <<EOF > client.ovpn
          client
          dev tun
          proto tcp
          remote $TS_IP 1194
          resolv-retry infinite
          nobind
          persist-key
          persist-tun
          remote-cert-tls server
          cipher AES-256-CBC
          verb 3
          <ca>
          $(cat ~/openvpn-ca/pki/ca.crt)
          </ca>
          <cert>
          $(cat ~/openvpn-ca/pki/issued/client1.crt)
          </cert>
          <key>
          $(cat ~/openvpn-ca/pki/private/client1.key)
          </key>
          EOF

      - name: Upload client.ovpn artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-ovpn
          path: client.ovpn
